<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADQ
        EAAAAk1TRnQBSQFMAgEBCQEAAQ4BAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wkAAoY7AAGhAa4BBwHw
        Ae8B7AGhNwABpwH3AvEC8ALvARUBhjUAAQcB8wHyA/EB8ALvARUBQwHsAaEyAAGhAfMD8gPxAe8BBwIU
        Ae8B6zIAAacB9AHzA/IC8QIHAhMBBwHsMgABpwH0A/MC8gHxAgcB7wHqAQcB7DIAAc8C9ALzAvIB8wUH
        AZIyAAG1A/8B9AF1AiYBHwFGAbwCBwHvMgAB9wGUBiYDIAEfAW8B8DMAASUDTQFHAiYFIAE/NAABYgJN
        AkcBTQMlASABojYAAcQBJgFNAkcCJQEgAaE5AAElAU0CJgE/PAABYgElAaKhAAMtFAADswHHAgABxwKt
        AS0BVgEtAaYDAAOzAccCAAHHAq0DrAGmBgABoQEnAQIBJwGhAQABLQFcAS0HAAGhAScBAgEnAaEIAAKz
        Aa0DAAGhARkB3AEtAVcBLQG1AwACswGtAwABoQEJA60BrAGmBQABpgECAS4CAgMtAVcDLQQAAaYBAgEu
        AwIBJwGFBgABtAGzAccEAAEtAlYBVwJVAS0CAAG0AbMBxwQAA60CrAGmBAABpgICAVUCAgEtAn0DVwEt
        AwABpgICAVUEAgInAaYEAAHbArMBxwIAAccBLQJ9AVwCfQEtAgAB2wKzAccCAAHHAbMBrQLHAbQBpgMA
        AWUBAgItAVYCAgMtAX0DLQIAAWUBAgItAVYFAgInAWUDAAHcArQB1QOzAQkBtQEtAX0BLQQAAdwCtAHV
        BLMBxwcABC0BWwQCAS0BfQEtAUgDAAQtAVsGAgEnAUgDAAEJA9UBtAOzAaEBLQF9AS0EAAEJA9UBtAOz
        AaEGAAGhAi0CLgF9BAIDLQEnAgABoQItAi4BfQcCAScDAAEJBdUCswHHBwABCQXVArMBxwYAAaEBNAEu
        AlUBfQcCAScCAAGhATQBLgJVAX0HAgEnAwABGQbVArMBxwGtAbMBxwMAARkG1QKzAccBrQGzAccCAAGm
        BFUBfQcCAScCAAGmBFUBfQcCAScDAAEZAQkC3APVAbQEswHHAwABGQEJAtwD1QG0BLMBxwIAAWUEVgF9
        CAICAAFlBFYBfQgCAwAExwHbAtUBtASzAccDAATHAdsC1QG0BLMBxwIAAQ0DVgFXAX0BLgcCAgABDQNW
        AVcBfQEuBwIGAAGzAdsC1QGzCwABswHbAtUBswcAAUgIfQFVBAICAAFICH0BVQQCBgABGQHbA9UBxwoA
        ARkB2wPVAccGAAFIA30B5AVWAVUBVgFVAQICAAFIA30B5AVWAVUBVgFVAQIGAAGzARkD1QGhCgABswEZ
        A9UBoQYAAaEBSAECAVUDVgNVAS4BSAGmAwABoQFIAQIBVQNWA1UBLgFIAaYIAAGnAq0BxwwAAacCrQHH
        DAABpgFlAScBZQGhCwABpgFlAScBZQGhWgABxwGmAaEPAAGhARIBZgEAAy0XAAKhDQABoQEUAYsDpgHH
        AaEJAAGGASoCMQIqAS0BXAEtCgABEgFmCgABoQFlAqYBxwGhCgABpgHqAesB7QH3Ae8B9wGtAqYBxwGh
        AgABxAFLAVIBWAJSATEDLQFXAy0FAAGGASoCMQIqAaEIAAGmAeoB6wHtAZIBiwKmAccBoQUAAccBrAFl
        AesB7AHtAZIB9wHvAQcCvAGhAgABWQJYBFIBLQJ9A1cBLQIAAcQBSwFSAVgCUgIxAisBSwYAAaEBrAEU
        AesB7AGSAfcB7wIHAbMBrAGmAgABoQGsAdMCrAHtAewC7QGSAfcB7wG1AwADWQJYAlIDLQF9Ay0BAAFL
        A1kBWAJSBTEBKgFnBAABpgHTAqwBpgGLAe0C9wHvAQcBtQMAAaYB0wGmAbICrAHPAbwBkgHyAfABBwHv
        AwAFWQFYAVICMQEtAX0BLQEqAgABKgRZAVgCUgUxASoDAAGhAbIB0wGtBKwBxwGmAYsB9wG1AgABxwHT
        AdQB0wGyAqwBsgGmARsBBwLwAaEDAAJ6A1kCWAIxAy0BKgIAASoCegJZAVgCUgUxASsDAAGsAdMJrAHH
        AaYBoQEAAawB0wGsAtMBsgOsAaYB9gHzAc8EAAN6A1kBUgUxASoCAAExAnoCWQFYAlIGMQIAAccB0wKz
        CawBoQIAAdMBrALTAa0C0wGyA6wB8AHvBAADegFZAZoBeQGaAVgEMQEqAgABMQJ6AVkBMQFYAlIGMQIA
        AawB1AGtAawDtAGzBKwBxwMAAbMC0wGsAtsBzQLTAbICrAHHBAABegKaAioBmgJZAlgCMQEqAgABMQJ6
        AjEBWAFZAZoBegUxAgAB0wGsAdMBrAS0AboCrAHHBAABoQGsAdMBrAPbAawC0wGyAdMBxwQAAXkBKgIx
        ASoBWQF6AlkBWAJSASoCAAExAlkCUgExAlkBWAFSAXkDMQIAAawB1APTAawBrQG0AqwBxwcAAccC0wPb
        AawC0wHHBQABSwGaAioBKwEqATEBWQF6AlkBKgMAATEDegFZAzECWANSATEEAAGhAccDrALTAccJAAHH
        AtMBswGsAtMBxwYAAaEBmQUqAoYBMQFLBQABoQFLAVIDegFSAioCUgExASoJAAGhAccLAAGhAawD0wGh
        CAABSwFSAcMBUgEqAUsMAAGGATECUgExAUsBhgGhGgABxwGyAaELAAHEAUsBegFSVwABQgFNAT4HAAE+
        AwABKAMAAUADAAEwAwABAQEAAQEFAAGAAQEWAAP/AQAB/wE/BgAB+AEPBgAB4AEHBgABwAEBBgABgAEB
        BgABgAEBBgABgAEBBgABgAEBBgABgAEBBgABgAEBBgABwAEBBgAB4AEDBgAB8AEHBgAB/AEfBgAB/gE/
        BgAC/wYABf8B4wL/AcMBAQHDAQEB+AEjAfgBPwHHAQEBxwEBAfABAAHwAQ8BxwGAAccBgQHgAQAB4AED
        AcMBAAHDAQEBwAEAAcABAQHAAQMBwAEfAcABAQHAAQEBwAEDAcABHwGAAQEBgAEBAcABHwHAAR8BgAEB
        AYABAQHAAQEBwAEBAYABAQGAAQEBwAEBAcABAQGAAQEBgAEBAcABAQHAAQEBgAEBAYABAQH4AT8B+AE/
        AYABAQGAAQEB+AEfAfgBHwGAAQEBgAEBAfgBHwH4AR8BgAEDAYABAwH8AT8B/AE/AfwBHwH8AR8K/wH4
        Af8B/gEjAv8B+QH/AfABDwH4AQMB/wE/AfABPwHwAQABwAEAAfgBDwHwAQMB4AEAAcABAAHAAQcB4AEA
        AcABAQHAAQABgAEBAeABAQHAAQEBwAEBAYABAQHAAQEBgAEBAcABAQGAAQEBwAEAAYABAwHAAQEBgAEB
        AYABAQGAAQMBwAEBAYABAQGAAQMBgAEDAcABAQGAAQEBgAEHAYABAwHAAQEBgAEBAYABDwHgAQcBwAED
        AYABAQHgAR8B8AEPAcABBwHAAQEB/wE/AfgBHwHgAX8B+AEHAv8B/gE/AfgBfwr/Cw==
</value>
  </data>
</root>